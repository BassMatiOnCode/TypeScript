<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2022-02-09" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2022-09-15" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2022-09-15" />
<meta name="version" content="1" />
<meta name="categories" content="Programming > Language > TypeScript" />
<meta name="tags" content="TypeScript, tutorial, type annotation" />
<meta name="description" content="Beyond simple type annotations: Objects, enums, compound types." />

<link rel="stylesheet" href="/inc/page.css" />
 
<title>TypeScript - More Type Annotations</title>

</head><body><header id="page-header"></header><div id="main-toolbar"></div><main id="page-content">

<h1>More Type Annotations</h1>

<p id="page-abstract"></p>

<h2 cbc>Functions</h2><div>

<p>Functions are annotated as follows:</p>

<pre>
function function-name( annotated-parameter-list ) : return-type-name { statements-block }
</pre>

<p>The annotated parameter list is a comma-separated list of </p>
<p>Anonymous functions are often closely tied to a calling context, and therfore parameters and return types can be inferred:</p>

<pre>
var names : string[] ;
names.forEach( function( s ) { console.log( s.toUpperCase( )); } ) ;
</pre>

<p>It is obvious that forEach expects a function that takes an array element of type string and returns nothing, so you don't have to annotate anything.</p>

<p>de</p>

<!--h2--></div>

</main><footer id="page-footer"></footer><script type="module" src="/inc/page.js" ></script></body></html>